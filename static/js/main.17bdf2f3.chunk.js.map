{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","filteredRobots","this","filter","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAeeA,EAbF,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,KAAKC,EAAY,EAAZA,MAAMC,EAAM,EAANA,GAEzB,OACD,sBAAKC,UAAU,sDAAf,UACC,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACtB,gCACC,mCAAMF,EAAN,OACA,mCAAMC,EAAN,cCacK,EAnBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAClB,OACD,8BAECA,EAAOC,KAAI,SAACC,EAAKC,GAChB,OACC,cAAC,EAAD,CAEMR,GAAIK,EAAOG,GAAGR,GACjBF,KAAMO,EAAOG,GAAGV,KACnBC,MAAOM,EAAOG,GAAGT,OAHZS,SCKOC,EAbG,SAAC,GAA+B,EAA9BC,YAA+B,IAAlBC,EAAiB,EAAjBA,aAChC,OACA,qBAAKV,UAAU,MAAf,SACC,uBACAA,UAAU,mCACVW,KAAM,SACNC,YAAa,gBACXC,SAAWH,OCCAI,EARA,SAACC,GACf,OACD,qBAAKC,MAAQ,CAACC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAO,SAApE,SACGJ,EAAMK,YCuCMC,G,wDArCd,aAAc,IAAD,8BACZ,gBAYFC,eAAiB,SAACC,GACjB,EAAKC,SAAS,CAAEf,YAAac,EAAME,OAAOC,SAZzC,EAAKC,MAAQ,CACNvB,OAAQ,GACXK,YAAa,IAJL,E,qDAOd,WAAoB,IAAD,OAClBmB,MAAM,8CACFC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAI,EAAKR,SAAS,CAAEpB,OAAQ4B,S,oBAO3C,WAAU,IAAD,OACHC,EAAiBC,KAAKP,MAAMvB,OAAO+B,QAAO,SAAA/B,GAChD,OAAOA,EAAOP,KAAKuC,cAAcC,SAAS,EAAKV,MAAMlB,YAAY2B,kBAEjE,OAAiC,IAA7BF,KAAKP,MAAMvB,OAAOkC,OACd,yCAIN,sBAAKtC,UAAU,KAAf,UACA,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAYU,aAAcwB,KAAKZ,iBACzB,cAAC,EAAD,UACA,cAAC,EAAD,CAAUlB,OAAW6B,a,GA/BXM,cCMHC,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,Q,MCGdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACA,cAAC,EAAD,MAEAC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.17bdf2f3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name,email,id})=>{\r\n\t//const {name,email,id} = props;\r\n\treturn (\r\n<div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n\t<img alt='robots' src={`https://robohash.org/${id}?200x200`} />\r\n<div>\r\n\t<h2> {name} </h2>\r\n\t<p>  {email} </p>\r\n</div>\r\n</div>\r\n\t\t)\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n\treturn(\r\n<div>\r\n  {\r\n\trobots.map((user,i)=>{\r\n\t\treturn (  \r\n\t\t\t<Card \r\n\t\t\tkey={i} \r\n\t        id={robots[i].id} \r\n\t\t    name={robots[i].name} \r\n\t\t\temail={robots[i].email}\r\n\t\t/>\r\n\t );\r\n })\r\n         }\r\n  </div>\r\n);\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) =>{\r\n\treturn (\r\n <div className='pa2'>\r\n \t<input\r\n \tclassName='pa3 ba b--green bg-lightest-blue' \r\n \ttype ='search' \r\n \tplaceholder ='search robots'\r\n    onChange ={searchChange}\r\n \t/>\r\n </div>\r\n );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n\treturn (\r\n<div style ={{overflow: 'scroll', border: '5px solid black', height:'500px'}}>\r\n\t\t{props.children}\r\n\t\t</div>\r\n\t\t);\r\n};\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\n//import {robots} from './robots';\r\nimport './App.css'\r\nclass App extends Component {\r\n\tconstructor(){\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n         robots: [],\r\n\t     searchfield: ''\r\n\t\t}\r\n\t}\r\ncomponentDidMount(){\r\n\tfetch('https://jsonplaceholder.typicode.com/users')\r\n    .then(response=> response.json())\r\n    .then(users => this.setState({ robots: users}));\r\n\r\n}\t\r\nonSearchChange = (event) => {\r\n this.setState({ searchfield: event.target.value })\t\r\n\t}\r\n\r\nrender() {\r\nconst filteredRobots = this.state.robots.filter(robots =>{\r\nreturn robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n\t\t})\r\nif (this.state.robots.length === 0){\r\n\treturn <h1>Loading</h1>\r\n}\r\nelse {\r\nreturn (\r\n\t\t<div className='tc' >\r\n\t\t<h1 className='f1'>RoboFriends</h1>\r\n\t\t<SearchBox  searchChange={this.onSearchChange}/>\r\n        <Scroll>\r\n        <CardList robots = { filteredRobots }/>\r\n        </Scroll> \r\n    </div>\r\n  );\r\n }\r\n }\r\n}\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import Card from './Card';\n//import {robots} from './robots'\nimport App from './containers/App';\n// import CardList from './CardList'\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n  <App /> \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}